{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";// const BASE_URL = \"https://testingnil1.ru/assets/output.json\";\n// export const getFAQService = createAsyncThunk(\n//   \"service/getService\",\n//   async (_, thunkAPI) => {\n//     try {\n//       const response = await fetch(`${BASE_URL}`);\n//       const data = await response.json();\n//       return data;\n//     } catch (err) {\n//       console.log(err);\n//       return thunkAPI.rejectWithValue(err);\n//     }\n//   }\n// );\nconst salonSlice=createSlice({name:\"salon\",initialState:{city:\"\",salon:\"\",FAQservice:[],isLoading:false},reducers:{addCityName:(state,_ref)=>{let{payload}=_ref;state.city=payload;},addSalonName:(state,_ref2)=>{let{payload}=_ref2;state.salon=payload;}}// extraReducers: (builder) => {\n//   builder.addCase(getFAQService.pending, (state) => {\n//     state.isLoading = true;\n//   });\n//   builder.addCase(getFAQService.fulfilled, (state, action) => {\n//     state.FAQservice = action.payload;\n//     state.isLoading = false;\n//   });\n//   builder.addCase(getFAQService.rejected, (state) => {\n//     state.isLoading = false;\n//   });\n// },\n});export default salonSlice.reducer;export const{addCityName,addSalonName}=salonSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","salonSlice","name","initialState","city","salon","FAQservice","isLoading","reducers","addCityName","state","_ref","payload","addSalonName","_ref2","reducer","actions"],"sources":["C:/Users/user/Desktop/Code/Стажировка/registration — копия/src/assets/salonSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n// const BASE_URL = \"https://testingnil1.ru/assets/output.json\";\r\n\r\n// export const getFAQService = createAsyncThunk(\r\n//   \"service/getService\",\r\n//   async (_, thunkAPI) => {\r\n//     try {\r\n//       const response = await fetch(`${BASE_URL}`);\r\n//       const data = await response.json();\r\n//       return data;\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//       return thunkAPI.rejectWithValue(err);\r\n//     }\r\n//   }\r\n// );\r\nconst salonSlice = createSlice({\r\n  name: \"salon\",\r\n  initialState: {\r\n    city: \"\",\r\n    salon: \"\",\r\n    FAQservice: [],\r\n    isLoading: false,\r\n  },\r\n  reducers: {\r\n    addCityName: (state, { payload }) => {\r\n      state.city = payload;\r\n    },\r\n    addSalonName: (state, { payload }) => {\r\n      state.salon = payload;\r\n    },\r\n  },\r\n  // extraReducers: (builder) => {\r\n  //   builder.addCase(getFAQService.pending, (state) => {\r\n  //     state.isLoading = true;\r\n  //   });\r\n  //   builder.addCase(getFAQService.fulfilled, (state, action) => {\r\n  //     state.FAQservice = action.payload;\r\n  //     state.isLoading = false;\r\n  //   });\r\n  //   builder.addCase(getFAQService.rejected, (state) => {\r\n  //     state.isLoading = false;\r\n  //   });\r\n  // },\r\n});\r\nexport default salonSlice.reducer;\r\nexport const { addCityName, addSalonName } = salonSlice.actions;\r\n"],"mappings":"AAAA,OAASA,gBAAgB,CAAEC,WAAW,KAAQ,kBAAkB,CAChE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAC,UAAU,CAAGD,WAAW,CAAC,CAC7BE,IAAI,CAAE,OAAO,CACbC,YAAY,CAAE,CACZC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,KACb,CAAC,CACDC,QAAQ,CAAE,CACRC,WAAW,CAAEA,CAACC,KAAK,CAAAC,IAAA,GAAkB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC9BD,KAAK,CAACN,IAAI,CAAGQ,OAAO,CACtB,CAAC,CACDC,YAAY,CAAEA,CAACH,KAAK,CAAAI,KAAA,GAAkB,IAAhB,CAAEF,OAAQ,CAAC,CAAAE,KAAA,CAC/BJ,KAAK,CAACL,KAAK,CAAGO,OAAO,CACvB,CACF,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CAAC,CACF,cAAe,CAAAX,UAAU,CAACc,OAAO,CACjC,MAAO,MAAM,CAAEN,WAAW,CAAEI,YAAa,CAAC,CAAGZ,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}